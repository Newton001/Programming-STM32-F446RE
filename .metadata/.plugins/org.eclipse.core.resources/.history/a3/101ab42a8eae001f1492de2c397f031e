/*
 * mma7660fc.c
 *
 *  Created on: Oct 29, 2024
 *      Author: newton
 */
#include "mma7660fc.h"


// Function to write a single byte to a register (Declaration moved up)
HAL_StatusTypeDef mma7660_WriteRegister(uint8_t reg, uint8_t data);


// Simple function to detect device on the I2C bus
void sensorDetect(void) {
    HAL_StatusTypeDef ret = HAL_I2C_IsDeviceReady(&hi2c1, DEVICE_ADDRESS, 1, 100);
    if (ret == HAL_OK) {
        printf("The Sensor is connected\n");
    } else {
        printf("The Device cannot be detected\n");
    }
}


// Initialize the MMA7660FC device
void mma7660_init(void) {
    if (mma7660_WriteRegister(SR, MMA7660_SAMPLE_RATE_32HZ) != HAL_OK) {
        Error_Handler();
    }
    if (mma7660_WriteRegister(MODE_REG, MMA7660_ACTIVE_MODE) != HAL_OK) {
        Error_Handler();
    }
}

// Read data from a single byte register
uint8_t mma7660_ReadRegister(I2C_HandleTypeDef *hi2c, uint8_t reg) {
    uint8_t data;
    HAL_I2C_Mem_Read(hi2c, DEVICE_ADDRESS, reg, I2C_MEMADD_SIZE_8BIT, &data, 1, 100);
    return data;
}

// Read acceleration data from X, Y, Z axes
void mma7660_ReadAcceleration(I2C_HandleTypeDef *hi2c, uint8_t *x, uint8_t *y, uint8_t *z) {
    *x = (uint8_t)mma7660_ReadRegister(hi2c, XOUT_REG);
    *y = (uint8_t)mma7660_ReadRegister(hi2c, YOUT_REG);
    *z = (uint8_t)mma7660_ReadRegister(hi2c, ZOUT_REG);
}

// Write a single byte of data to a register
HAL_StatusTypeDef mma7660_WriteRegister(uint8_t reg, uint8_t data) {
    return HAL_I2C_Mem_Write(&hi2c1, DEVICE_ADDRESS, reg, I2C_MEMADD_SIZE_8BIT, &data, 1, 100);
}

